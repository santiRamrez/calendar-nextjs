import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from '@/styles/Home.module.css'
import Link from 'next/link'

/***** React Hooks *****/
import React, { useState, useEffect, useRef } from "react";

/****** Layout  ******/
import Dashboard from '../layout/dashboard'
import Sidebar from '../layout/sidebar'
import Profile from '../layout/profile'
import Stack from '../layout/stack'
import Headers from '../layout/headers'
import Calendar from '../layout/calendar'

/****** Components  ******/
import CalendarUI from '../components/calendar/calendar'
import Agenda from '../components/agenda/agenda'

/** Utils **/
import getCurrentDate from '@/utils/getCurrentDate'
import monthToNumber from '@/utils/monthToNumber';
import HttpsReq  from '@/utils/HttpsReq' //this is a class and must be initialized

const inter = Inter({ subsets: ['latin'] })

export default function Home() {
  const dt = new Date()
  const startReq = new HttpsReq()

  // State of this component
  const [data, setData] = useState()
  const [showAgenda, setShowAgenda] = useState(false)
  const [selectedDate, setSelectedDate] = useState()
  const [date, setDate] = useState({
    "month": dt.toLocaleString('en-uk', {month:'long'}),
    "year": dt.getFullYear(),
  })
  const [endpoint, setEndpoint] = useState("/")

  useEffect(() => {
    //Fetch all dates of the current month
    const numberMonth = monthToNumber(date.month)
    startReq.getAll(`dates/${numberMonth}-${date.year}`)
      .then((response) => setData(response))

  }, [endpoint])

  useEffect(() => {
    const numberMonth = monthToNumber(date.month)
    setEndpoint(`${numberMonth}-${date.year}`)
  }, [date])
 
  const closeAgenda = () => {
    setShowAgenda(false)
    setSelectedDate(0)
  }

  const watchChanges = (d) => {
    if (d.date) {
      //If there is a date, is bc the user has clicked on a date
      setSelectedDate(prev => {
        if(d.date !== prev) {
          setShowAgenda(true)
          return d.date
        }
      })
    }
    setDate(d)
  }


  return (
    <>
      <Head>
        <title>Calendar</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.container}>
          <Sidebar>
            <Profile/>
            <Stack />
          </Sidebar>
          <Dashboard>
            {showAgenda ? <Agenda show={showAgenda} handleClickBack={closeAgenda}/> : <Agenda show={false}/>}
            <Headers />
            <Calendar >
              <CalendarUI data={data} month={date.month} year={date.year} endpoint={endpoint} sendDate={(date) => watchChanges(date)} />
            </Calendar>
          </Dashboard>
      </div>
    </>
  )
}
